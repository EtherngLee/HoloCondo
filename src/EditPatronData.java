
import java.awt.Window;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.concurrent.TimeUnit;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E-Therng
 */
public class EditPatronData extends javax.swing.JPanel {


    /**
     * Creates new form EditPatronData
     */
    public EditPatronData() {
        initComponents();
        Block.setEnabled(false);
        Floor.setEnabled(false);
        HPNumber.setEditable(false);
        Email.setEditable(false);
        Name.setEditable(false);
        Delete.setEnabled(false);
        Delete.setVisible(false);
        jPanel3.setVisible(false);
        Confirm.setVisible(false);
        Confirm.setEnabled(false);
        Submit2.setEnabled(false);
        PatSearch.setVisible(false);
            PatronCombo.setVisible(false);
            SearchBar.setVisible(false);
            Search.setVisible(false);
            Se.setVisible(false);
            Ser.setVisible(false);
            Ser.setEditable(false);
        Edit.setEnabled(false);
        Block.addItem("A");
        Block.addItem("B");
        Block.addItem("C");
        Block.addItem("D");
        SerialCombo.setVisible(false);
        for(int i=1; i<=20; i++)
        {
            Floor.addItem(i+"");
        }
    }
    
    private String getTodayDate()
    {
        
        //defines the format
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        
        //gets the system datee
        Date todayD = new Date();
        
        //formats today's date as per our format defined in the first line
        String m = df.format(todayD);
        
        return m;
        //will return string m which contains the data.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        EditPatron = new javax.swing.JRadioButton();
        AddPatron = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        Submit2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Block = new javax.swing.JComboBox<>();
        Floor = new javax.swing.JComboBox<>();
        Name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        HPNumber = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        Se = new javax.swing.JLabel();
        Ser = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Delete = new javax.swing.JButton();
        Confirm = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        PatSearch = new javax.swing.JLabel();
        SearchBar = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        SerialCombo = new javax.swing.JComboBox<>();
        PatronCombo = new javax.swing.JComboBox<>();

        jLabel3.setText("Type \"DELETE\" to delete the patron");

        setBackground(new java.awt.Color(202, 214, 226));

        jPanel1.setBackground(new java.awt.Color(202, 214, 226));

        buttonGroup1.add(EditPatron);
        EditPatron.setText("View/Delete Patron");
        EditPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPatronActionPerformed(evt);
            }
        });

        buttonGroup1.add(AddPatron);
        AddPatron.setText("Add a New Patron");
        AddPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPatronActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("Edit Patron Data");

        Edit.setText("Click to Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Submit2.setText("Submit");
        Submit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Submit2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(243, 196, 192));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel8.setText("Apartment Number");

        Block.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Block" }));
        Block.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlockActionPerformed(evt);
            }
        });

        Floor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Floor" }));
        Floor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FloorActionPerformed(evt);
            }
        });

        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setText("Name");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel10.setText("Phone Number");

        HPNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HPNumberActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setText("Email");

        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        Se.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Se.setText("Serial");

        Ser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(HPNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Block, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Name)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Se)
                                .addGap(18, 18, 18)
                                .addComponent(Ser)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Block, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(Floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HPNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Se))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jButton9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton9.setText("Back to Home Page");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(119, 133, 149));

        Delete.setText("Delete Patron");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Confirm.setText("Confirm Deletion");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Confirm))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(Confirm)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(162, 249, 211));

        PatSearch.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        PatSearch.setText("Patron Search");

        SearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        SerialCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Serial" }));
        SerialCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerialComboActionPerformed(evt);
            }
        });

        PatronCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patron Name" }));
        PatronCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatronComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(PatSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PatronCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Search, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(SerialCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatronCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SerialCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(120, 120, 120)
                                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(65, 65, 65))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AddPatron)
                                .addGap(97, 97, 97)
                                .addComponent(EditPatron)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(Submit2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddPatron)
                    .addComponent(EditPatron))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Submit2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarActionPerformed

    private void EditPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPatronActionPerformed

        Edit.setEnabled(true);
        PatSearch.setVisible(true);
        PatronCombo.setVisible(true);
        Submit2.setEnabled(false);
        Name.setText("");
        HPNumber.setText("");
        Email.setText("");
        Ser.setText("");
        Block.setSelectedIndex(0);
        Floor.setSelectedIndex(0);
        Block.setEnabled(false);
        Floor.setEnabled(false);
        Email.setEditable(false);
        Name.setEditable(false);
        HPNumber.setEditable(false);
        SearchBar.setVisible(true);
        Search.setVisible(true);
        PatronCombo.setEnabled(true);
        SearchBar.setEnabled(true);
        Search.setEnabled(true);
    }//GEN-LAST:event_EditPatronActionPerformed

    private void PatronComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatronComboActionPerformed
        if(PatronCombo.getSelectedIndex()>0)
        {
            SerialCombo.setSelectedIndex(PatronCombo.getSelectedIndex());
        }
    }//GEN-LAST:event_PatronComboActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        if(SearchBar.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Patron Name!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                PatronCombo.removeAllItems();
                PatronCombo.addItem("Patron Name");
                SerialCombo.removeAllItems();
                SerialCombo.addItem("Serial");
                String na = SearchBar.getText();
                FileReader fr = new FileReader("Patron.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";

                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String block = tk.nextToken();
                    String floor = tk.nextToken();
                    String n = tk.nextToken();
                    String hpn = tk.nextToken();
                    String email = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    String ser = tk.nextToken();
                    if(n.contains(na))
                    {
                        PatronCombo.addItem(n + ": " + block + "," + floor);
                        SerialCombo.addItem(ser);
                    }
                }
                br.close();
            }
            catch(Exception e)
            {
            }
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void AddPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPatronActionPerformed

        Edit.setEnabled(true);
        Block.setSelectedIndex(0);
        Floor.setSelectedIndex(0);
        Block.setEnabled(false);
        Floor.setEnabled(false);
        Name.setText("");
        HPNumber.setText("");
        Email.setText("");
        Name.setEditable(false);
        Ser.setText("");
        Se.setVisible(false);
        Ser.setEditable(false);
        Ser.setVisible(false);
        HPNumber.setEditable(false);
        Email.setEditable(false);
        PatSearch.setVisible(false);
        PatronCombo.setVisible(false);
        SearchBar.setVisible(false);
        Search.setVisible(false);
        PatronCombo.setEnabled(false);
        SearchBar.setEnabled(false);
        Search.setEnabled(false);
        Delete.setEnabled(false);
        Delete.setVisible(false);
        jPanel3.setVisible(false);
        Confirm.setVisible(false);
        Confirm.setEnabled(false);
    }//GEN-LAST:event_AddPatronActionPerformed

    private void SerialComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerialComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SerialComboActionPerformed

    private void BlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlockActionPerformed

    }//GEN-LAST:event_BlockActionPerformed

    private void FloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FloorActionPerformed

    }//GEN-LAST:event_FloorActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void HPNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HPNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HPNumberActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void SerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SerActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        if(AddPatron.isSelected())
        {
            Name.setEditable(true);
            Block.setEnabled(true);
            Floor.setEnabled(true);
            HPNumber.setEditable(true);
            Email.setEditable(true);
            Submit2.setEnabled(true);
        }
        if(EditPatron.isSelected() && PatronCombo.getSelectedIndex()!=0)
        {
            Block.setEnabled(true);
            Floor.setEnabled(true);
            Name.setEditable(true);
            Block.setEnabled(true);
            Floor.setEnabled(true);
            HPNumber.setEditable(true);
            Email.setEditable(true);
            Submit2.setEnabled(true);
            Delete.setEnabled(true);
            Delete.setVisible(true);
            jPanel3.setVisible(true);
            Confirm.setVisible(true);
            Confirm.setEnabled(true);
            Ser.setVisible(true);
            Se.setVisible(true);
            Ser.setEditable(false);
            try{

                String ser = SerialCombo.getSelectedItem()+"";
                FileReader fr = new FileReader("Patron.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";

                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String block = tk.nextToken();
                    String floor = tk.nextToken();
                    String n = tk.nextToken();
                    String hpn = tk.nextToken();
                    String email = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    String serial = tk.nextToken();
                    if(ser.equals(serial))
                    {
                        Block.setSelectedItem(block);
                        Floor.setSelectedItem(floor);
                        Name.setText(n);
                        HPNumber.setText(hpn);
                        Email.setText(email);
                        Ser.setText(serial);
                    }
                    if(ser.equals(serial) && del.equals("Y"))
                    {
                        Delete.setText("Delete Patron");
                        Confirm.setText("Confirm Deletion");
                    }
                    if(ser.equals(serial) && del.equals("N"))
                    {
                        Delete.setText("Restore Patron");
                        Confirm.setText("Confirm Restoration");
                    }
                }
                br.close();
            }
            catch(Exception e)
            {

            }

        }
        if(EditPatron.isSelected() && PatronCombo.getSelectedIndex()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Select Patron!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EditActionPerformed

    private void Submit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Submit2ActionPerformed
        boolean err = false;
        int serial=0;
        if(Block.getSelectedIndex()==0 || Floor.getSelectedIndex()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Select Block and Floor!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(Name.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Select Name!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(HPNumber.getText().equals("") && err == false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please Enter Your Mobile Number", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err = true;
        }
        String phone = HPNumber.getText();
        boolean numeric = true;

        try {
            Double num = Double.parseDouble(phone);
        }
        catch (NumberFormatException e) {
            numeric = false;
        }

        if(numeric == false && err == false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please Enter All Numbers For Your Mobile Number", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err = true;
        }

        int count = 0;
        for(int i = 0; i < phone.length(); i++) {
            if(phone.charAt(i) != ' ')
            count++;
        }

        if(count>10 && err == false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please Make Sure Your Mobile Number Has 10 Numbers", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err = true;
        }
        if(Email.getText().equals("") && err == false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please Enter Your Email", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err = true;
        }
        boolean at = false;
        for(int i = 0; i < Email.getText().length(); i++) {
            if(Email.getText().charAt(i) == '@')
            {
                at = true;
            }

        }
        if(at==false && err == false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please Enter A Valid Email", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err = true;
        }
        if(err==false)
        {
            if(AddPatron.isSelected())
            {
                try{

                FileReader fr = new FileReader("Patron.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";

                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String block = tk.nextToken();
                    String floor = tk.nextToken();
                    String n = tk.nextToken();
                    String hpn = tk.nextToken();
                    String ema = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    int se = Integer.parseInt(tk.nextToken());

                    if(block.equals(Block.getSelectedItem()) && floor.equals(Floor.getSelectedItem()))
                    {
                        err=true;
                        javax.swing.JOptionPane.showMessageDialog(null, "A Patron Has Already Registered For This Unit!", "Message: Error!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                br.close();

            }
            catch(Exception e)
            {

            }
            }
            if(EditPatron.isSelected())
            {
                try{

                FileReader fr = new FileReader("Patron.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";

                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String block = tk.nextToken();
                    String floor = tk.nextToken();
                    String n = tk.nextToken();
                    String hpn = tk.nextToken();
                    String ema = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    int se = Integer.parseInt(tk.nextToken());

                    if(block.equals(Block.getSelectedItem()) && floor.equals(Floor.getSelectedItem()) && se!=Integer.parseInt(SerialCombo.getSelectedItem().toString()))
                    {
                        err=true;
                        javax.swing.JOptionPane.showMessageDialog(null, "A Patron Has Already Registered For This Unit!", "Message: Error!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                br.close();

            }
            catch(Exception e)
            {

            }
            }
            
        }
        if(err==false)
        {
            if(AddPatron.isSelected())
            {
                try{

                    FileReader fr = new FileReader("Patron.txt");
                    BufferedReader br = new BufferedReader(fr);
                    String r ="";

                    while((r=br.readLine())!=null)
                    {
                        StringTokenizer tk = new StringTokenizer(r,",");
                        String block = tk.nextToken();
                        String floor = tk.nextToken();
                        String n = tk.nextToken();
                        String hpn = tk.nextToken();
                        String ema = tk.nextToken();
                        String mem = tk.nextToken();
                        String del = tk.nextToken();
                        int se = Integer.parseInt(tk.nextToken());

                        if(serial<se)
                        {
                            serial=se;
                        }
                    }
                    br.close();
                    serial = serial + 1;

                    FileWriter PatInfo = new FileWriter("Patron.txt", true);
                    PrintWriter PatWriter = new PrintWriter(PatInfo);

                    PatWriter.println(Block.getSelectedItem() + "," + Floor.getSelectedItem()
                        + "," + Name.getText()+ "," + HPNumber.getText()  + "," + Email.getText()
                        + ",0,Y,"+ serial+"");
                    PatWriter.close();

                    javax.swing.JOptionPane.showMessageDialog(null, "Patron Registered!", "Registration Successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                catch(Exception e)
                {

                }
            }

            if(EditPatron.isSelected())
            {
                try{

                    String na = Name.getText();
                    String hpn = HPNumber.getText();
                    String email = Email.getText();
                    String b = Block.getSelectedItem()+"";
                    String f = Floor.getSelectedItem()+"";

                    ArrayList<String>restoreList = new ArrayList<String>();

                    FileReader fr = new FileReader("Patron.txt");
                    BufferedReader br = new BufferedReader(fr);
                    String r ="";

                    while((r=br.readLine())!=null)
                    {
                        StringTokenizer tk = new StringTokenizer(r,",");
                        String block = tk.nextToken();
                        String floor = tk.nextToken();
                        String n = tk.nextToken();
                        String hpno = tk.nextToken();
                        String emai = tk.nextToken();
                        String mem = tk.nextToken();
                        String del = tk.nextToken();
                        String ser = tk.nextToken();
                        if(Ser.getText().equals(ser))
                        {
                            restoreList.add(b + "," + f + "," + na + "," + hpn + "," + email +"," + mem + "," + del + "," + ser);
                        }
                        else
                        {
                            restoreList.add(r);//added the record to the array list
                        }
                    }
                    br.close();

                    FileWriter fw = new FileWriter("Patron.txt",false);
                    PrintWriter pr = new PrintWriter(fw);

                    for(int i=0; i<restoreList.size(); i++)
                    {
                        String s = restoreList.get(i);
                        pr.println(s);
                    }
                    pr.close();
                    javax.swing.JOptionPane.showMessageDialog(null, "Patron Edited!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                }
                catch(Exception e)
                {
                    System.out.println("Error in Editing Data");
                }
            }
        }
    }//GEN-LAST:event_Submit2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        AdminHomePage f1 = new AdminHomePage();

        f1.show();

        ((Window)getRootPane().getParent()).dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if(Confirm.isSelected()==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Click Confirm!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try{

                String serial = Ser.getText();

                ArrayList<String>restoreList = new ArrayList<String>();

                FileReader fr = new FileReader("Patron.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";
                boolean d = true;
                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String block = tk.nextToken();
                    String floor = tk.nextToken();
                    String n = tk.nextToken();
                    String hpn = tk.nextToken();
                    String email = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    String ser = tk.nextToken();
                    if(serial.equals(ser) && del.equals("Y"))
                    {
                        restoreList.add(block + "," + floor + "," + n + "," + hpn + "," + email +"," + mem + ",N," + ser);

                    }
                    else if(serial.equals(ser) && del.equals("N"))
                    {
                        restoreList.add(block + "," + floor + "," + n + "," + hpn + "," + email +"," + mem + ",Y," + ser);
                        d = false;
                    }
                    else
                    {
                        restoreList.add(r);//added the record to the array list
                    }
                }
                br.close();

                //write code to transfer arraylist to the file

                FileWriter fw = new FileWriter("Patron.txt",false);
                PrintWriter pr = new PrintWriter(fw);

                for(int i=0; i<restoreList.size(); i++)
                {
                    String s = restoreList.get(i);
                    pr.println(s);
                }
                pr.close();
                if(d==true)
                {
                    FileWriter TransInfo = new FileWriter("Transactions.txt", true);
                    PrintWriter TransWriter = new PrintWriter(TransInfo);

                    TransWriter.println("Delete,Patron" + "," + serial + "," + getTodayDate()) ;
                    TransWriter.close();

                    javax.swing.JOptionPane.showMessageDialog(null, "Patron Deleted!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {

                    FileWriter TransInfo = new FileWriter("Transactions.txt", true);
                    PrintWriter TransWriter = new PrintWriter(TransInfo);

                    TransWriter.println("Restore,Patron" + "," + serial + "," + getTodayDate()) ;
                    TransWriter.close();

                    javax.swing.JOptionPane.showMessageDialog(null, "Patron Restored!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);            }

            }
            catch(Exception e)
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Error in Deleting/Restoring Data!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AddPatron;
    private javax.swing.JComboBox<String> Block;
    private javax.swing.JRadioButton Confirm;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JRadioButton EditPatron;
    private javax.swing.JTextField Email;
    private javax.swing.JComboBox<String> Floor;
    private javax.swing.JTextField HPNumber;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel PatSearch;
    private javax.swing.JComboBox<String> PatronCombo;
    private javax.swing.JLabel Se;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchBar;
    private javax.swing.JTextField Ser;
    private javax.swing.JComboBox<String> SerialCombo;
    private javax.swing.JButton Submit2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
