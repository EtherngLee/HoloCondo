
import static com.sun.xml.internal.ws.policy.sourcemodel.wspolicy.XmlToken.Name;
import java.awt.Window;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.concurrent.TimeUnit;
import jdk.nashorn.internal.ir.Block;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author E-Therng
 */
public class EditMembership extends javax.swing.JPanel {

    /**
     * Creates new form EditMembershi
     */
    public EditMembership() {
        initComponents();
        SerialLabel.setVisible(false);
        SelectMember.setVisible(false);
        SelectMember.setEnabled(false);
        Title.setEditable(false);
        Price.setEditable(false);
        Duration.setEditable(false);
        BorrowDur.setEnabled(false);
        BorrowQ.setEditable(false);
        HoldQ.setEditable(false);
        MemberQ.setEditable(false);
        Delete.setEnabled(false);
        Confirm.setEnabled(false);
        Delete.setVisible(false);
        jPanel3.setVisible(false);
        Confirm.setVisible(false);
        BorrowDura.setEnabled(false);
        Serial.setVisible(false);
        Serial.setEditable(false);
        ClicktoEdit.setEnabled(false);
        Submit2.setEnabled(false);
    }

    private String getTodayDate()
    {
        
        //defines the format
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        
        //gets the system datee
        Date todayD = new Date();
        
        //formats today's date as per our format defined in the first line
        String m = df.format(todayD);
        
        return m;
        //will return string m which contains the data.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        SelectMember = new javax.swing.JComboBox<>();
        Edit = new javax.swing.JRadioButton();
        Add = new javax.swing.JRadioButton();
        ClicktoEdit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Title = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BorrowQ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        HoldQ = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        BorrowDur = new javax.swing.JButton();
        Duration = new javax.swing.JTextField();
        MemberQ = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Serial = new javax.swing.JTextField();
        SerialLabel = new javax.swing.JLabel();
        BorrowDura = new com.toedter.calendar.JDateChooser();
        Submit2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Delete = new javax.swing.JButton();
        Confirm = new javax.swing.JRadioButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        setBackground(new java.awt.Color(202, 214, 226));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("Edit Membership");

        SelectMember.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        SelectMember.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Membership" }));
        SelectMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectMemberActionPerformed(evt);
            }
        });

        buttonGroup1.add(Edit);
        Edit.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Edit.setText("Edit Current Membership");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        buttonGroup1.add(Add);
        Add.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Add.setText("Add New Membership");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        ClicktoEdit.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        ClicktoEdit.setText("Click to Edit");
        ClicktoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClicktoEditActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(243, 196, 192));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Membership Title");

        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Price");

        BorrowQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrowQActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Book Borrowing Quota");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Book Holding Quota");

        HoldQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HoldQActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel15.setText("Borrowing Duration");

        BorrowDur.setText("Calculate Borrowing Duration");
        BorrowDur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrowDurActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("Membership Quota");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Days");

        SerialLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        SerialLabel.setText("Serial");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SerialLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Serial, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MemberQ, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HoldQ, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BorrowQ, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Duration, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(BorrowDura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BorrowDur, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(46, 46, 46)
                    .addComponent(jLabel2)
                    .addGap(318, 318, 318)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BorrowQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HoldQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BorrowDura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BorrowDur, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(MemberQ, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SerialLabel))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addContainerGap(288, Short.MAX_VALUE)))
        );

        Submit2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        Submit2.setText("Submit");
        Submit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Submit2ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton5.setText("Back to Home Page");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(119, 133, 149));

        Delete.setText("Delete Membership");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Confirm.setText("Confirm Deletion");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Confirm, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(ClicktoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SelectMember, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Add)
                                            .addGap(48, 48, 48)
                                            .addComponent(Edit))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(154, 154, 154)
                                            .addComponent(Submit2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edit)
                    .addComponent(Add))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelectMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClicktoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Submit2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 66, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SelectMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectMemberActionPerformed

    }//GEN-LAST:event_SelectMemberActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        SelectMember.setVisible(true);
        SelectMember.setEnabled(true);
        ClicktoEdit.setEnabled(true);
        Title.setEditable(false);
        Price.setEditable(false);
        Duration.setEditable(false);
        BorrowDur.setEnabled(false);
        BorrowQ.setEditable(false);
        HoldQ.setEditable(false);
        MemberQ.setEditable(false);
        Submit2.setEnabled(false);
        Title.setText("");
        Price.setText("");
        Duration.setText("");
        BorrowQ.setText("");
        HoldQ.setText("");
        MemberQ.setText("");

        try{
            SelectMember.removeAllItems();
            SelectMember.addItem("Select Membership");
            FileReader fr = new FileReader("Membership.txt");
            BufferedReader br = new BufferedReader(fr);
            String r ="";

            while((r=br.readLine())!=null)
            {
                StringTokenizer tk = new StringTokenizer(r,",");
                String title = tk.nextToken();

                SelectMember.addItem(title);
            }
            br.close();
        }
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_EditActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        ClicktoEdit.setEnabled(true);
        Delete.setEnabled(false);
        Delete.setVisible(false);
        jPanel3.setVisible(false);
        Confirm.setVisible(false);
        SelectMember.setVisible(false);
        SelectMember.setEnabled(false);
        Submit2.setEnabled(false);

        Title.setEditable(false);
        Price.setEditable(false);
        Duration.setEditable(false);
        BorrowDur.setEnabled(false);
        BorrowQ.setEditable(false);
        HoldQ.setEditable(false);
        MemberQ.setEditable(false);

        Title.setText("");
        Price.setText("");
        Duration.setText("");
        BorrowQ.setText("");
        HoldQ.setText("");
        MemberQ.setText("");
    }//GEN-LAST:event_AddActionPerformed

    private void ClicktoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClicktoEditActionPerformed
        if(Add.isSelected())
        {
            Title.setEditable(true);
            Price.setEditable(true);
            Duration.setEditable(true);
            BorrowDur.setEnabled(true);
            BorrowQ.setEditable(true);
            HoldQ.setEditable(true);
            MemberQ.setEditable(true);
            BorrowDura.setEnabled(true);
            Submit2.setEnabled(true);
        }
        if(Edit.isSelected() && SelectMember.getSelectedIndex()!=0)
        {
            Title.setEditable(true);
            Submit2.setEnabled(true);
            Price.setEditable(true);
            Duration.setEditable(true);
            BorrowDur.setEnabled(true);
            BorrowQ.setEditable(true);
            HoldQ.setEditable(true);
            MemberQ.setEditable(true);
            Delete.setEnabled(true);
            Confirm.setEnabled(true);
            Delete.setVisible(true);
            jPanel3.setVisible(true);
            Confirm.setVisible(true);
            BorrowDura.setEnabled(true);

            try{

                String na = SelectMember.getSelectedItem()+"";
                FileReader fr = new FileReader("Membership.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";

                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String title = tk.nextToken();
                    String price = tk.nextToken();
                    String borrowq = tk.nextToken();
                    String holdq = tk.nextToken();
                    String duration = tk.nextToken();
                    String memberq = tk.nextToken();
                    String del = tk.nextToken();
                    String serial = tk.nextToken();
                    if(title.equals(na))
                    {
                        Title.setText(title);
                        Price.setText(price);
                        HoldQ.setText(holdq);
                        BorrowQ.setText(borrowq);
                        Duration.setText(duration);
                        MemberQ.setText(memberq);
                        Serial.setText(serial);
                    }
                    if(title.equals(na) && del.equals("1"))
                    {
                        Delete.setText("Delete Membership");
                        Confirm.setText("Confirm Deletion");
                    }
                    else if(title.equals(na) && del.equals("0"))
                    {
                        Delete.setText("Restore Membership");
                        Confirm.setText("Confirm Restoration");
                    }
                }
                br.close();
            }
            catch(Exception e)
            {

            }

        }
        if(Edit.isSelected() && SelectMember.getSelectedIndex()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Select Membership!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ClicktoEditActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void BorrowQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrowQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BorrowQActionPerformed

    private void HoldQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HoldQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HoldQActionPerformed

    private void BorrowDurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrowDurActionPerformed
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date firstDate = sdf.parse(getTodayDate());
            Date t = BorrowDura.getDate();
            String cd = sdf.format(t);

            Date secondDate = sdf.parse(cd);

            long diffInMillies = Math.abs(secondDate.getTime() - firstDate.getTime());

            long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

            Duration.setText(diff+"");
        }
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_BorrowDurActionPerformed

    private void Submit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Submit2ActionPerformed
        boolean err = false;

        if(Title.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Title!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(Price.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Price!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(Price.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Price Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }
        if(HoldQ.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Holding Quota!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(HoldQ.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Holding Quota Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }
        if(MemberQ.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Member Quota!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(MemberQ.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Member Quota Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }
        if(BorrowQ.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Borrowing Quota!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(BorrowQ.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Borrowing Quota Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }
        if(Duration.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Duration!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(Duration.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Duration Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }

        if(err==false)
        {
            try {
                int x = Integer.parseInt(BorrowQ.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Borrowing Quota Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }
        }

        if(BorrowQ.getText().equals("") && err==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter Borrowing Quota!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }

        if(err==false)
        {
            try {
                int x = Integer.parseInt(BorrowQ.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Borrowing Quota Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }

        }
        if(Duration.getText().equals("") && err==false )
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Set Borrowing Duration!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            err=true;
        }
        if(err==false)
        {
            try {
                int x = Integer.parseInt(Duration.getText());
            }catch(NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Borrowing Duration Needs To Be An Integer!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                err=true;
            }

        }

        if(err==false)
        {
            if(Add.isSelected())
            {

                try{

                    FileReader fr = new FileReader("Membership.txt");
                    BufferedReader br = new BufferedReader(fr);
                    String r ="";
                    int serial = 0;
                    while((r=br.readLine())!=null)
                    {
                        StringTokenizer tk = new StringTokenizer(r,",");
                        String title = tk.nextToken();
                        String price = tk.nextToken();
                        String borrowQ = tk.nextToken();
                        String holdQ = tk.nextToken();
                        String duration = tk.nextToken();
                        String memberQ  = tk.nextToken();
                        String del = tk.nextToken();
                        int se = Integer.parseInt(tk.nextToken());

                        if(serial<se)
                        {
                            serial=se;
                        }
                    }
                    br.close();
                    serial = serial + 1;

                    FileWriter PatInfo = new FileWriter("Membership.txt", true);
                    PrintWriter PatWriter = new PrintWriter(PatInfo);

                    PatWriter.println(Title.getText()  + "," + Price.getText() + "," + BorrowQ.getText()
                        + "," + HoldQ.getText() + "," + Duration.getText() + "," + MemberQ.getText() + ",1," + serial+"");
                    PatWriter.close();
                    javax.swing.JOptionPane.showMessageDialog(null, "Membership Added!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                }
                catch(Exception e)
                {

                }

            }

            if(Edit.isSelected())
            {
                try{

                    String titl = Title.getText();
                    String pric = Price.getText();
                    String membe = MemberQ.getText();
                    String holdq = HoldQ.getText();
                    String borrowq = BorrowQ.getText();
                    String duration = Duration.getText();

                    ArrayList<String>restoreList = new ArrayList<String>();

                    FileReader fr = new FileReader("Membership.txt");
                    BufferedReader br = new BufferedReader(fr);
                    String r ="";

                    while((r=br.readLine())!=null)
                    {
                        StringTokenizer tk = new StringTokenizer(r,",");
                        String title = tk.nextToken();
                        String price = tk.nextToken();
                        String hold = tk.nextToken();
                        String borrow = tk.nextToken();
                        String dur = tk.nextToken();
                        String mem = tk.nextToken();
                        String del = tk.nextToken();
                        String ser = tk.nextToken();
                        if(ser.equals(Serial.getText()))
                        {
                            restoreList.add(titl + "," + pric + "," + holdq + "," + borrowq + "," + duration + "," + membe + "," + del + "," + ser +"");
                        }
                        else
                        {
                            restoreList.add(r);//added the record to the array list
                        }
                    }
                    br.close();

                    FileWriter fw = new FileWriter("Membership.txt",false);
                    PrintWriter pr = new PrintWriter(fw);

                    for(int i=0; i<restoreList.size(); i++)
                    {
                        String s = restoreList.get(i);
                        pr.println(s);
                    }
                    pr.close();
                    javax.swing.JOptionPane.showMessageDialog(null, "Membership Edited!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                catch(Exception e)
                {
                    System.out.println("Error in Editing Data");
                }
            }
        }
    }//GEN-LAST:event_Submit2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AdminHomePage f1 = new AdminHomePage();

        f1.show();

        ((Window)getRootPane().getParent()).dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if(Confirm.isSelected()==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Click Confirm to Delete/Restore the Membership!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try{
                boolean d = true;
                ArrayList<String>restoreList = new ArrayList<String>();

                FileReader fr = new FileReader("Membership.txt");
                BufferedReader br = new BufferedReader(fr);
                String r ="";
                while((r=br.readLine())!=null)
                {
                    StringTokenizer tk = new StringTokenizer(r,",");
                    String title = tk.nextToken();
                    String price = tk.nextToken();
                    String hold = tk.nextToken();
                    String borrow = tk.nextToken();
                    String dur = tk.nextToken();
                    String mem = tk.nextToken();
                    String del = tk.nextToken();
                    String ser = tk.nextToken();
                    if(ser.equals(Serial.getText()) && del.equals("1"))
                    {
                        restoreList.add(title + "," + price + "," + hold + "," + borrow + "," + dur + "," + mem + "," + "0" + "," + ser +"");
                    }
                    else if(ser.equals(Serial.getText()) && del.equals("0"))
                    {
                        restoreList.add(title + "," + price + "," + hold + "," + borrow + "," + dur + "," + mem + "," + "1" + "," + ser +"");
                        d = false;
                    }

                    else
                    {
                        restoreList.add(r);//added the record to the array list
                    }
                }
                br.close();

                //write code to transfer arraylist to the file

                FileWriter fw = new FileWriter("Membership.txt",false);
                PrintWriter pr = new PrintWriter(fw);

                for(int i=0; i<restoreList.size(); i++)
                {
                    String s = restoreList.get(i);
                    pr.println(s);
                }
                pr.close();

                if(d==true)
                {
                    FileWriter TransInfo = new FileWriter("Transactions.txt", true);
                    PrintWriter TransWriter = new PrintWriter(TransInfo);

                    TransWriter.println("Delete,Membership" + "," + Serial.getText() + "," + getTodayDate()) ;
                    TransWriter.close();
                    javax.swing.JOptionPane.showMessageDialog(null, "Membership Deleted!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    FileWriter TransInfo = new FileWriter("Transactions.txt", true);
                    PrintWriter TransWriter = new PrintWriter(TransInfo);

                    TransWriter.println("Restore,Membership" + "," + Serial.getText() + "," + getTodayDate()) ;
                    TransWriter.close();
                    javax.swing.JOptionPane.showMessageDialog(null, "Membership Restored!", "Message: Saved!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            }
            catch(Exception e)
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Error in Deleting/Restoring Data!", "Message: ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Add;
    private javax.swing.JButton BorrowDur;
    private com.toedter.calendar.JDateChooser BorrowDura;
    private javax.swing.JTextField BorrowQ;
    private javax.swing.JButton ClicktoEdit;
    private javax.swing.JRadioButton Confirm;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Duration;
    private javax.swing.JRadioButton Edit;
    private javax.swing.JTextField HoldQ;
    private javax.swing.JTextField MemberQ;
    private javax.swing.JTextField Price;
    private javax.swing.JComboBox<String> SelectMember;
    private javax.swing.JTextField Serial;
    private javax.swing.JLabel SerialLabel;
    private javax.swing.JButton Submit2;
    private javax.swing.JTextField Title;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
